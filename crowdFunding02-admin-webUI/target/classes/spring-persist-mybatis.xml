<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">

<!--加载外部属性文件-->
    <context:property-placeholder location="classpath:jdbc.properties"/>

    <!--配置数据源, druid 是开源的 JDBC 组件-->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
        <property name="username" value="${jdbc.user}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="driverClassName" value="${jdbc.driver}"/>
        <property name="password" value="${jdbc.password}"/>
    </bean>

    <!--配置 sqlSessionFactoryBean整合Mybatis-->
    <!--是 Spring 和 Mybatis 整合的重要工具-->
    <bean id="sqlSessionFactoryBean" class="org.mybatis.spring.SqlSessionFactoryBean">

        <!--指定 Mybatis 全局配置文件的位置-->
        <property name="configLocation" value="classpath:mybatis-config.xml"/>

        <!--指定 XXXMapper.xml 配置文件的位置-->
        <property name="mapperLocations" value="classpath:mybatis/mapper/*Mapper.xml"/>

        <!--关联数据源，使用 ref 进行配置，引入 Druid 数据源，等效于 c3p0 -->
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!-- Mybatis 扫描全局文件的配置-->
    <bean id="mapperScannerConfigurer" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.iproject.crowd.mapper"/>
    </bean>

</beans>